generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?    @db.VarChar(255)
  address      String?    @db.VarChar(255)
  phone_number String?    @db.VarChar(20)
  name         String     @db.VarChar(255)
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  user_id      String     @db.Uuid
  tenant_id    String     @db.VarChar(255)
  user         user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee     employee[]
}

model employee {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name    String     @db.VarChar(255)
  last_name     String     @db.VarChar(255)
  email         String     @unique @db.VarChar(255)
  phone_number  String?    @db.VarChar(20)
  address       String?    @db.VarChar(255)
  date_of_birth DateTime?  @db.Timestamp(6)
  company_id    String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  company       company    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payroll       payroll[]
  vacation      vacation[]
}

model payroll {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  employee_id String   @db.Uuid
  salary      Int
  bonus       Int?
  deductions  Int?
  pay_date    DateTime @db.Timestamp(6)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  employee    employee @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}

model vacation {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date  DateTime @db.Timestamp(6)
  end_date    DateTime @db.Timestamp(6)
  employee_id String   @db.Uuid
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  employee    employee @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
